 body: Container(
          color: MyColors.darkColor,
          width: double.infinity,


          child:  Column(children: [
            Padding(
              padding: const EdgeInsets.all(20.0),
              child: Row(
                children: [
                  Row(
                    children: [
                      CircleAvatar(
                        backgroundColor: widget.post.gender == 0 ? MyColors.blueColor : MyColors.pinkColor ,
                        backgroundImage: widget.post.user_img != "" ?  CachedNetworkImageProvider('${ASSETSBASEURL}AppUsers/${widget.post.user_img}') : null,
                        radius: 25,
                        child: widget.post.user_img == "" ?
                        Text(widget.post.user_name.toUpperCase().substring(0 , 1) +
                            (widget.post.user_name.contains(" ") ? widget.post.user_name.substring(widget.post.user_name.indexOf(" ")).toUpperCase().substring(1 , 2) : ""),
                          style: const TextStyle(color: Colors.white , fontSize: 24.0 , fontWeight: FontWeight.bold),) : null,
                      ),

                    ],
                  ),

                  const SizedBox(width: 10.0,),
                  Expanded(
                    child: Column(
                      children: [
                        Row(
                          children: [
                            Text(widget.post.user_name , style: TextStyle(color: MyColors.whiteColor , fontSize: 15.0),),
                            const SizedBox(width: 5.0,),
                            CircleAvatar(
                              backgroundColor: widget.post.gender == 0 ? MyColors.blueColor : MyColors.pinkColor ,
                              radius: 10.0,
                              child: widget.post.gender == 0 ?  const Icon(Icons.male , color: Colors.white, size: 15.0,) :  const Icon(Icons.female , color: Colors.white, size: 15.0,),
                            )
                          ],
                        ),
                        Row(

                          children: [
                            Image(image: CachedNetworkImageProvider('${ASSETSBASEURL}Levels/${widget.post.share_level_img}') , width: 35,),
                            const SizedBox(width: 10.0,),
                            Image(image: CachedNetworkImageProvider('${ASSETSBASEURL}Levels/${widget.post.karizma_level_img}') , width: 35,),
                            const SizedBox(width: 10.0,),
                            Image(image: CachedNetworkImageProvider('${ASSETSBASEURL}Levels/${widget.post.charging_level_img}') , width: 25,),
                          ],
                        ),
                      ],
                    ),
                  ),
                  GestureDetector(
                    onTap: (){},
                    child: Container(
                      padding: const EdgeInsets.symmetric(horizontal: 10.0 , vertical: 5.0),
                      decoration: BoxDecoration(border: Border.all(color: MyColors.primaryColor , width: 1.0 ) , borderRadius: BorderRadius.circular(15.0) , color: Colors.transparent),
                      child:  Text("Follow" , style: TextStyle(color: MyColors.primaryColor),),
                    ),
                  ),
                  PopupMenuButton<int>(
                    onSelected: (item) => {
                      reportPost(widget.post.id , item)
                    },
                    iconColor: Colors.white,
                    iconSize: 25.0,
                    itemBuilder: (context) => [
                      const PopupMenuItem<int>(value: 0, child: Text('Not Interested')),
                      const PopupMenuItem<int>(value: 1, child: Text('report')),
                    ],
                  )

                ],

              ),
            ),
            const SizedBox(height: 10.0,),
            Text(widget.post.content , style: const TextStyle(color: Colors.white) , textAlign: TextAlign.start,) ,
            const SizedBox(height: 10.0,),
            widget.post.img != "" ? Image(image: CachedNetworkImageProvider('${ASSETSBASEURL}Posts/${widget.post.img}') , width: 100.0 ,) : const SizedBox(height: 1,),
            const SizedBox(height: 5.0,),
            Padding(
              padding: const EdgeInsets.symmetric(horizontal: 20.0),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.end,
                children: [
                  Text(widget.post.created_at , style: TextStyle(color: MyColors.unSelectedColor , fontSize: 11.0),) ,
                  SizedBox(width: 10.0,),
                  Container(
                    padding: const EdgeInsets.symmetric(horizontal: 10.0 , vertical: 3.0),
                    decoration: BoxDecoration(border: Border.all(color: Colors.transparent , width: 1.0 , style: BorderStyle.solid) , borderRadius: BorderRadius.circular(25.0) ,
                        color:  MyColors.successColor),
                    child:  Row(
                      mainAxisSize: MainAxisSize.min,
                      mainAxisAlignment: MainAxisAlignment.end,
                      children: [
                        Text('#${widget.post.tag}' , style: TextStyle(color: MyColors.whiteColor , fontSize: 15.0),)
                      ],),
                  )
                ],
              ),
            ),
            const SizedBox(height: 5.0,),
            TabBar(
              dividerColor: Colors.transparent,
              tabAlignment: TabAlignment.center,
              isScrollable: true ,
              indicatorColor: MyColors.primaryColor,
              labelColor: MyColors.primaryColor,
              unselectedLabelColor: MyColors.unSelectedColor,
              labelStyle: const TextStyle(fontSize: 17.0 , fontWeight: FontWeight.w900),
              tabs: [
                Row(
                  children: [
                    IconButton(onPressed: (){
                      Navigator.push(context, MaterialPageRoute(builder: (context) =>  PostScreen(post: widget.post)));
                    }, icon: Icon(FontAwesomeIcons.comment , color: MyColors.unSelectedColor, size: 20.0,)),
                    Text(widget.post.comments_count.toString() , style: TextStyle(color: MyColors.unSelectedColor , fontSize: 14.0),)
                  ],
                ),
                Row(
                  children: [
                    IconButton(onPressed: (){   }, icon: Icon(FontAwesomeIcons.heart ,
                      color: ( widget.post.likes!.where((element) => element.user_id == user_id).isEmpty  ? MyColors.unSelectedColor : MyColors.primaryColor), size:20.0,)),
                    Text(widget.post.likes_count.toString() , style: TextStyle(color: MyColors.unSelectedColor , fontSize: 14.0),)
                  ],
                )
                //
              ],
            ),
            const SizedBox(height: 5.0,),

            Expanded(
             child: Container(
               child: TabBarView(
                 children: [
                   ListView.separated( itemBuilder: (ctx , index) => likesListItem(index), separatorBuilder: (ctx , index) => separatorBuilder(), itemCount: widget.post.likes!.length),
                   ListView.separated( itemBuilder: (ctx , index) => likesListItem(index), separatorBuilder: (ctx , index) => separatorBuilder(), itemCount: widget.post.likes!.length),
                 ],
               ),
             ),
           ),

            Container(
              width: double.infinity,
              height: 60.0,
              color: MyColors.solidDarkColor,
              padding: EdgeInsets.symmetric(horizontal: 20.0 , vertical: 5.0),
              child: Row(
                children: [
                  Column(
                    children: [
                      IconButton(onPressed: (){   }, icon: Icon(FontAwesomeIcons.share ,
                        color:  MyColors.unSelectedColor , size:30.0,)),
                    ],
                  ),

                  SizedBox(width: 30.0,),
                  Expanded(
                      child: TextField()
                  ),
                  SizedBox(width: 30.0,),

                  Column(
                    children: [
                      IconButton(onPressed: (){   }, icon: Icon(FontAwesomeIcons.heart ,
                        color: ( widget.post.likes!.where((element) => element.user_id == user_id).isEmpty  ? MyColors.unSelectedColor : MyColors.primaryColor), size:30.0,)),
                    ],
                  ),

                ],
              ),
            )

          ],
          ),
        ),